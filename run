#!/bin/bash

PROJECT_PATH="/srv/style-osm-geopicardie/styles/"

cd $PROJECT_PATH
git checkout $BRANCH

STYLES=();

for STYLE_PATH in `find $PROJECT_PATH -maxdepth 1 -type d`; do
	STYLE=`basename $STYLE_PATH`
	echo "Style $STYLE (branche $BRANCH)"

	if [ ! -f $PROJECT_PATH/$STYLE/project.mml ]; then
		echo "Pas de style $STYLE"
		echo "Le chemin $PROJECT_PATH/$STYLE/project.mml existe pas"
		continue
	fi
	
	STYLES=("${STYLES[@]}" $STYLE)
	cd $STYLE

	echo "Création MML local"
	cat project.mml|prod_project_mml  > project.loc.mml

	if [ ! -f project.loc.mml ]; then
		echo "\t project.loc.mml existe pas"
		exit 1
	fi

	echo "Création mapnik.xml"
	carto project.loc.mml > mapnik.xml

	if [ $? -gt 0 ]; then
		echo "échec création mapnik.xml (carto)"
		exit 1
	fi

	#if [ ! -d /srv/mapproxy/$STYLE ]; then
	#	mkdir -p /srv/mapproxy/$STYLE
	#fi

	cd ..
done

mkdir -p /srv/mapproxy/www
echo "Création /srv/mapproxy/mapproxy.yaml"
cat > /srv/mapproxy/mapproxy.yaml << EOF
services:
  demo:
  wms:
    srs: ['EPSG:4326', 'EPSG:3857', 'EPSG:2154']
    md:
      title: Geopicardie Style
      abstract: Service WMS

layers:
EOF
for STYLE in "${STYLES[@]}"; do
  cat >> /srv/mapproxy/mapproxy.yaml << EOF
  - name: $STYLE
    title: $STYLE
    sources: [mapnik_$STYLE]
EOF
done

echo "sources:" >> /srv/mapproxy/mapproxy.yaml
for STYLE in "${STYLES[@]}"; do
  cat >> /srv/mapproxy/mapproxy.yaml << EOF
    mapnik_$STYLE:
      type: mapnik
      mapfile: $PROJECT_PATH/$STYLE/mapnik.xml
EOF
done

cat >> /srv/mapproxy/mapproxy.yaml << EOF 
grids:
    webmercator:
        base: GLOBAL_WEBMERCATOR
    mercatornw:
        base: GLOBAL_WEBMERCATOR
        origin: nw

globals:
EOF

mkdir /srv/mapproxy/www
ln -s $PROJECT_PATH/img /srv/mapproxy/www/img
mapproxy-util create -t wsgi-app -f /srv/mapproxy/mapproxy.yaml /srv/mapproxy/www/config.py
chmod a+x /srv/mapproxy/www/config.py

cat > /etc/apache2/conf-enabled/mapproxy.conf << EOF
WSGIScriptAlias / /srv/mapproxy/www/config.py
WSGIDaemonProcess mapproxy user=mapproxy group=mapproxy processes=2 threads=4
WSGIProcessGroup mapproxy

<Directory /srv/mapproxy/www>
  Require all granted
</Directory>
EOF

echo "Démarre apache" 1>&2

/usr/sbin/apache2ctl -D FOREGROUND
